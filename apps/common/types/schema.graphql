type UserResponse {
  """名前"""
  name: String!

  """メールアドレス"""
  mail: String!
}

type OwnUserResponse {
  """名前"""
  name: String!

  """メールアドレス"""
  mail: String!

  """セッションID"""
  sessionId: String!
}

type RoomResponse {
  id: String!
  name: String!
}

type PostResponse {
  id: String!
  message: String!
  ownerId: String!
  replyTo: String
}

type Query {
  rooms: [RoomResponse!]!
  ownUser: UserResponse!

  """投稿の最新100件を取得する"""
  posts: [PostResponse!]!
}

type Mutation {
  signup(params: SignupUserRequest!): OwnUserResponse!
  login(params: LoginUserRequest!): OwnUserResponse!

  """投稿を一件追加する"""
  addPost(params: AddPostRequest!): PostResponse!
}

input SignupUserRequest {
  lastName: String!
  firstName: String!
  mail: String!
  password: String!
}

input LoginUserRequest {
  mail: String!
  password: String!
}

input AddPostRequest {
  message: String!
  replyTo: String
  roomId: String!
}

type Subscription {
  postAdded: PostResponse!
}
